name: Java CI Pipeline

on:
  push:
    branches: [ main, enhancement/ci, feature/test_automation ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Grant gradlew permissions
      run: chmod +x gradlew

    - name: Cache Gradle dependencies
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build with Gradle
      run: ./gradlew clean build

    - name: Run Unit Tests
      run: ./gradlew test

    - name: Build Docker image
      run: docker build -t beluga-asg .

    - name: Start Docker Compose
      run: docker-compose -f docker-compose.yml up -d

    - name: Run Integration Tests
      run: |
        echo "Waiting for services to be ready..."
        sleep 30
        ./gradlew integrationTest

    - name: Stop Docker Compose
      if: always()
      run: docker-compose -f docker-compose.yml down